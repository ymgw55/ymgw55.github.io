<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ymgw55.github.io</title>
    <link>/authors/admin/</link>
      <atom:link href="/authors/admin/index.xml" rel="self" type="application/rss+xml" />
    <description>ymgw55.github.io</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 26 Jan 2020 20:12:47 +0900</lastBuildDate>
    <image>
      <url>/img/icon-192.png</url>
      <title>ymgw55.github.io</title>
      <link>/authors/admin/</link>
    </image>
    
    <item>
      <title>[ Book Review ] 基礎からのMySQL 第3版</title>
      <link>/post/book-review-mysql/</link>
      <pubDate>Sun, 26 Jan 2020 20:12:47 +0900</pubDate>
      <guid>/post/book-review-mysql/</guid>
      <description>&lt;p&gt;Docker と CTF の勉強をするためにMySQLを復習した。
大学院やインターン先でこれからデータを扱っていくこともあり、ちょうど良い機会になった。&lt;/p&gt;
&lt;p&gt;今回読んだのは「基礎からのMySQL 第3版」
(
&lt;a href=&#34;https://www.amazon.co.jp/%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%81%AEMySQL-%E7%AC%AC3%E7%89%88-%E5%9F%BA%E7%A4%8E%E3%81%8B%E3%82%89%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E8%A5%BF%E6%B2%A2-%E5%A4%A2%E8%B7%AF/dp/4797393114&#34;&gt;Amazon&lt;/a&gt;
, &lt;a href=&#34;https://www.sbcr.jp/product/4797393118/&#34;&gt;SBCreative&lt;/a&gt;
)
という本。( 本書では MANP を用いた Windows 環境を想定 )&lt;/p&gt;
&lt;p&gt;Part5 まであり、Part3 までが MySQL の文法、Part4 が簡単な PHP の説明、Part5 はおまけで MySQL と PHP で簡易掲示板を作るという内容だった。&lt;/p&gt;
&lt;p&gt;MySQL の文法を主に復習したかったので Part3 までで自分的には丁寧な説明でかなり満足できたが、ちゃんと Docker ( 現状では機械学習の環境としての使用に留まる ) を学習するなら PHP の簡単な動作くらいは覚えていても損はないかなということで最後まで読むことにした。&lt;/p&gt;
&lt;p&gt;学部が情報系ではないこともあり CS の知識にまだ不安が残るので CTF の勉強もしていて、SQLの文法と PHP の簡単な操作を抑えておけばそちらの方面でもスムーズに web や SQL の問題の学習にとりかかれると思う。&lt;/p&gt;
&lt;p&gt;ただこの本は MySQL の文法がメインで、データベーススペシャリストで出題されるような DB の構造の部分まではカバーできていないので、必要があればもう一冊くらい DB 関連の本を読んでも良いかなという感じ。&lt;/p&gt;
&lt;p&gt;本業は機械学習で大学院ではそちらの勉強ばかりになるので春休み中に 広く CS を勉強する良い機会になった。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[ Book Review ] Github実践入門</title>
      <link>/post/book-review-github/</link>
      <pubDate>Tue, 21 Jan 2020 09:48:32 +0900</pubDate>
      <guid>/post/book-review-github/</guid>
      <description>&lt;p&gt;GitHub は以前から使っていて簡単な操作はできていたが ( このサイトも GitHub pages で制作している )、
インターン先でグループで開発する可能性があるので、GitHub を用いた共同開発の仕方について勉強することにした。&lt;/p&gt;
&lt;p&gt;今回読んだのは「GitHub 実践入門」
(
&lt;a href=&#34;https://www.amazon.co.jp/GitHub%E5%AE%9F%E8%B7%B5%E5%85%A5%E9%96%80-Pull-Request%E3%81%AB%E3%82%88%E3%82%8B%E9%96%8B%E7%99%BA%E3%81%AE%E5%A4%89%E9%9D%A9-PRESS-plus/dp/477416366X/ref=sr_1_1?adgrpid=53626124112&amp;amp;gclid=EAIaIQobChMIpc2wjr-T5wIVEHZgCh0QKgpZEAAYASAAEgLEpPD_BwE&amp;amp;hvadid=338568185171&amp;amp;hvdev=c&amp;amp;hvlocphy=1009507&amp;amp;hvnetw=g&amp;amp;hvpos=1t1&amp;amp;hvqmt=e&amp;amp;hvrand=18043033037807198471&amp;amp;hvtargid=kwd-334941713223&amp;amp;hydadcr=27264_11561112&amp;amp;jp-ad-ap=0&amp;amp;keywords=github%E5%AE%9F%E8%B7%B5%E5%85%A5%E9%96%80&amp;amp;qid=1579568476&amp;amp;sr=8-1&#34;&gt;Amazon&lt;/a&gt;
, &lt;a href=&#34;https://gihyo.jp/book/2014/978-4-7741-6366-6&#34;&gt;技術評論社&lt;/a&gt;
)
という本。&lt;/p&gt;
&lt;p&gt;少し情報が古く GitHub のページが所々変わっているところもあったが、基本的なことは変化していないので全体を通して曖昧な理解のままだったブランチの操作や
pull request ( 以下PR ) の仕方、共同開発の流れがまとまって書いてあり、参考になることが多かった。&lt;/p&gt;
&lt;p&gt;なかなか他人のプロダクトに PR を送るのは気が引けるが、この本では PR を実際に用意されたレポジトリに送ることができるので、
実際の流れをデモンストレーションできる。&lt;/p&gt;
&lt;p&gt;hub コマンドや、git-flow はまだうまく使いこなせないかもしれないが、git-flow を用いて少人数開発をする時のサイクルを理解できたのはよかった。&lt;/p&gt;
&lt;p&gt;Gist 等のサービスも利用していなかったので、これから使っていこうと思う。( 本書では量の多いログなどを見てもらう時に使ったりできると書いてあった。 )&lt;/p&gt;
&lt;h2 id=&#34;おまけ-本書には載っていなかった事柄をメモ&#34;&gt;おまけ: 本書には載っていなかった事柄をメモ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;git branch --vv&lt;/code&gt;: ローカルブランチとリモート追跡ブランチの関係を確認。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ターミナルでプロンプトに現在のブランチを表示させるといちいちコマンドで確認しなくて済む。
&lt;img src=&#34;terminal-image.png&#34; alt=&#34;terminal-image&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;バージョンが更新されたので、&lt;code&gt;git checkout&lt;/code&gt; だけでなく &lt;code&gt;git switch&lt;/code&gt; と &lt;code&gt;git restore&lt;/code&gt; も使えると良い。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Library for Competitive Programming</title>
      <link>/project/library-for-competitive-programming/</link>
      <pubDate>Sun, 19 Jan 2020 19:18:13 +0900</pubDate>
      <guid>/project/library-for-competitive-programming/</guid>
      <description>&lt;p&gt;GitHub で Python の&lt;a href=&#34;https://github.com/ymgw55/library-for-competitive-programming&#34;&gt;&lt;strong&gt;競技プログラミング用のライブラリ&lt;/strong&gt;&lt;/a&gt;を公開しています。
競技プログラミングでは Python よりも実行時間の短い C++ の方が好まれるのでそちらも追加予定。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[ 設定 ] github pagesでポートフォリオ用のサイトを作成したので使い方をまとめておく</title>
      <link>/post/how-to-use-academic/</link>
      <pubDate>Sun, 19 Jan 2020 07:43:11 +0900</pubDate>
      <guid>/post/how-to-use-academic/</guid>
      <description>&lt;p&gt;githubでは静的ページを &lt;code&gt;http://[username].github.io/&lt;/code&gt; で作成することができる。
設定等については &lt;a href=&#34;https://pages.github.com/&#34;&gt;&lt;strong&gt;GitHub Pages&lt;/strong&gt;&lt;/a&gt; 参照。&lt;/p&gt;
&lt;p&gt;静的サイトジェネレーター &lt;a href=&#34;https://gohugo.io/&#34;&gt;&lt;strong&gt;Hugo&lt;/strong&gt;&lt;/a&gt; でサイトを作って放置していたので今回は初めての post として備忘録を兼ねて自分用にいくつかメモをしておく。&lt;/p&gt;
&lt;p&gt;使っているのは &lt;a href=&#34;https://sourcethemes.com/academic/&#34;&gt;&lt;strong&gt;Academic&lt;/strong&gt;&lt;/a&gt; というテーマで、詳しい使い方は &lt;a href=&#34;https://sourcethemes.com/academic/docs/&#34;&gt;&lt;strong&gt;公式Document&lt;/strong&gt;&lt;/a&gt; に全て英語で書いてあるが、よく使いそうな機能をこのページにまとめる。&lt;/p&gt;
&lt;p&gt;Academic ではマークダウンでページを生成することができて、細かい設定に拘らなければ HTML や CSS に触れる必要はなく、web にそこまで詳しくない自分でもそれらしい形の物は作ることができた。&lt;/p&gt;
&lt;h3 id=&#34;メニューバーの設定&#34;&gt;メニューバーの設定&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;config/_default/menus.toml&lt;/code&gt; で設定。&lt;/p&gt;
&lt;p&gt;メニューバーに表示させる項目(&lt;code&gt;Home&lt;/code&gt;, &lt;code&gt;Posts&lt;/code&gt; など) の表示・非表示設定、順番、リンク先などの設定できる。&lt;/p&gt;
&lt;h3 id=&#34;自己紹介の設定&#34;&gt;自己紹介の設定&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;content/authors/admin/_index.md&lt;/code&gt;で設定。&lt;/p&gt;
&lt;h3 id=&#34;home-ページの設定&#34;&gt;Home ページの設定&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;content/home/*.md&lt;/code&gt; で設定。ここで表示・非表示などの設定ができる。例えば &lt;code&gt;posts.md&lt;/code&gt; であれば、&lt;code&gt;content/post/&lt;/code&gt; と対応していて、このフォルダの中のディレクトリの内容をいくつ表示するか、などを決める。&lt;/p&gt;
&lt;h3 id=&#34;usernamegithubio-ページの設定&#34;&gt;[username].github.io/* ページの設定&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;[username].github.io/post&lt;/code&gt; の場合、&lt;code&gt;content/post/_index.md&lt;/code&gt; でページのタイトル・サブタイトル等を設定できる。&lt;/p&gt;
&lt;h3 id=&#34;新しいページの作成&#34;&gt;新しいページの作成&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-a-blog-post&#34;&gt;&lt;strong&gt;公式Documentのここ&lt;/strong&gt;&lt;/a&gt; に書いてある通り、例えば新しい投稿しようとしたときは、
&lt;code&gt;hugo new --kind post post/my-article-name&lt;/code&gt; で新しくmy-article-nameフォルダが自動作成されて、そのフォルダ内のindex.mdに書けばよい。(手動でフォルダや設定ファイルを作成するとフォント等がデフォルトと少し異なり気持ち悪い？)&lt;/p&gt;
&lt;h3 id=&#34;数式コードの書き方&#34;&gt;数式・コードの書き方&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/post/writing-technical-content/&#34;&gt;&lt;strong&gt;公式のDemoサイト&lt;/strong&gt;&lt;/a&gt; に詳しく書いてある。&lt;/p&gt;
&lt;h3 id=&#34;contact-の設定&#34;&gt;Contact の設定&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;config/_default/params.toml&lt;/code&gt; で設定。電話番号や住所の公開・非公開などが設定できる。&lt;/p&gt;
&lt;h3 id=&#34;変更内容の確認&#34;&gt;変更内容の確認&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hugo server&lt;/code&gt; でサーバーを立ち上げ、&lt;code&gt;localhost:1313&lt;/code&gt;で確認できる。&lt;/p&gt;
&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;
&lt;p&gt;幾らか項目を上げたが、まだわかっていないことも多いので積極的にページを触っていきたい。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
