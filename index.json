[{"authors":["admin"],"categories":null,"content":"I'm an undergraduate of department of mathematics at Kyoto University. My research interests include machine learning and mathematics.\n現在私は京都大学理学部数学科の学生であり、大学院は同大学の情報学科システム科学専攻に進学予定です。専攻分野は機械学習とそれに伴う数学です。\n","date":1579567712,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1579567712,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I'm an undergraduate of department of mathematics at Kyoto University. My research interests include machine learning and mathematics.\n現在私は京都大学理学部数学科の学生であり、大学院は同大学の情報学科システム科学専攻に進学予定です。専攻分野は機械学習とそれに伴う数学です。","tags":null,"title":"Hiroaki Yamagiwa","type":"authors"},{"authors":["Hiroaki Yamagiwa"],"categories":["book review"],"content":"GitHub は以前から使っていて簡単な操作はできていたが ( このサイトも GitHub pages で制作している )、 インターン先でグループで開発する可能性があるので、GitHub を用いた共同開発の仕方について勉強することにした。\n今回読んだのは「GitHub 実践入門」 ( Amazon , 技術評論社 ) という本。\n少し情報が古く GitHub のページが所々変わっているところもあったが、基本的なことは変化していないので全体を通して曖昧な理解のままだったブランチの操作や pull request ( 以下PR ) の仕方、共同開発の流れがまとまって書いてあり、参考になることが多かった。\nなかなか他人のプロダクトに PR を送るのは気が引けるが、この本では PR を実際に用意されたレポジトリに送ることができるので、 実際の流れをデモンストレーションできる。\nhub コマンドや、git-flow はまだうまく使いこなせないかもしれないが、git-flow を用いて少人数開発をする時のサイクルを理解できたのはよかった。\nGist 等のサービスも利用していなかったので、これから使っていこうと思う。( 本書では量の多いログなどを見てもらう時に使ったりできると書いてあった。 )\nおまけ: 本書には載っていなかった事柄をメモ   git branch --vv: ローカルブランチとリモート追跡ブランチの関係を確認。\n  ターミナルでプロンプトに現在のブランチを表示させるといちいちコマンドで確認しなくて済む。   ","date":1579567712,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579567712,"objectID":"fe7ba2760e529a8bcefe0e9258433068","permalink":"/post/book-review-github/","publishdate":"2020-01-21T09:48:32+09:00","relpermalink":"/post/book-review-github/","section":"post","summary":"共同開発に備えてGitHubの技術書を読んだ","tags":["GitHub"],"title":"[ Book Review ] Github実践入門","type":"post"},{"authors":["Hiroaki Yamagiwa"],"categories":["competitive-programming"],"content":"GitHub で Python の競技プログラミング用のライブラリを公開しています。 競技プログラミングでは Python よりも実行時間の短い C++ の方が好まれるのでそちらも追加予定。\n","date":1579429093,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579429093,"objectID":"96bc476ea9346f5ddd2570ca5a814b03","permalink":"/project/library-for-competitive-programming/","publishdate":"2020-01-19T19:18:13+09:00","relpermalink":"/project/library-for-competitive-programming/","section":"project","summary":"Python の競技プログラミング用ライブラリ。","tags":["AtCoder","Codeforces"],"title":"Library for Competitive Programming","type":"project"},{"authors":["Hiroaki Yamagiwa"],"categories":["settings"],"content":"githubでは静的ページを http://[username].github.io/ で作成することができる。 設定等については GitHub Pages 参照。\n静的サイトジェネレーター Hugo でサイトを作って放置していたので今回は初めての post として備忘録を兼ねて自分用にいくつかメモをしておく。\n使っているのは Academic というテーマで、詳しい使い方は 公式Document に全て英語で書いてあるが、よく使いそうな機能をこのページにまとめる。\nAcademic ではマークダウンでページを生成することができて、細かい設定に拘らなければ HTML や CSS に触れる必要はなく、web にそこまで詳しくない自分でもそれらしい形の物は作ることができた。\nメニューバーの設定 config/_default/menus.toml で設定。\nメニューバーに表示させる項目(Home, Posts など) の表示・非表示設定、順番、リンク先などの設定できる。\n自己紹介の設定 content/authors/admin/_index.mdで設定。\nHome ページの設定 content/home/*.md で設定。ここで表示・非表示などの設定ができる。例えば posts.md であれば、content/post/ と対応していて、このフォルダの中のディレクトリの内容をいくつ表示するか、などを決める。\n[username].github.io/* ページの設定 [username].github.io/post の場合、content/post/_index.md でページのタイトル・サブタイトル等を設定できる。\n新しいページの作成 公式Documentのここ に書いてある通り、例えば新しい投稿しようとしたときは、 hugo new --kind post post/my-article-name で新しくmy-article-nameフォルダが自動作成されて、そのフォルダ内のindex.mdに書けばよい。(手動でフォルダや設定ファイルを作成するとフォント等がデフォルトと少し異なり気持ち悪い？)\n数式・コードの書き方 公式のDemoサイト に詳しく書いてある。\nContact の設定 config/_default/params.toml で設定。電話番号や住所の公開・非公開などが設定できる。\n変更内容の確認 hugo server でサーバーを立ち上げ、localhost:1313で確認できる。\nまとめ 幾らか項目を上げたが、まだわかっていないことも多いので積極的にページを触っていきたい。\n","date":1579387391,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579387391,"objectID":"89295fdf4b5d5f97ef8a98af1c82ac15","permalink":"/post/how-to-use-academic/","publishdate":"2020-01-19T07:43:11+09:00","relpermalink":"/post/how-to-use-academic/","section":"post","summary":"備忘録","tags":["Academic-theme"],"title":"github pagesでポートフォリオ用のサイトを作成したので使い方をまとめておく","type":"post"}]